Files:
trainingresult.png: is of training result.
mln_setup_generated... : This is the output of my work, it includes parameters, weights and database used to run mln (manually for testing)
mln_training_params: selected params that can be pasted into the top part of training mln (pracmln)
mln_training_db: Training database that can be pasted (Both of these (above and this) have been used to achieve the results in the image.

state_1_problem: original generated problem file (pddl)
state_1_solution: a solution generated by ffx
blocksworld.pddl: The domain file used fo the problem.

mln_training_db: database for training
mln_training_params: the weights to learn and predicates
mln_training_result: output of the training run with above config.

mln_inference_db: state upon which to perform inference (commented out params are those that need to be found for the test to be successful)
mln_inference_param: the weights of the trained model.
mln_inference_result: the results with percentages for each predicate.


Caveats:
1. I ignored the preconditions for the negative effect for now, not because it doesn't work, but just because I was debugging a lot,
and at one point I thought it was breaking things. turns out it was pracmln. anyhow, it makes little difference for this simple example.
I will fix this in the future.


2. The tool seems to crash sometimes due to complexity and an overflow. this example works fine for now.